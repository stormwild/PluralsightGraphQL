// <auto-generated />
using System;
using CarvedRockWeb.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarvedRockWeb.Api.Migrations
{
    [DbContext(typeof(CarvedRockDbContext))]
    partial class CarvedRockDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CarvedRockWeb.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("IntroducedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoFileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Use these sturdy shoes to pass any mountain range with ease.",
                            IntroducedAt = new DateTimeOffset(new DateTime(2022, 2, 12, 0, 59, 50, 358, DateTimeKind.Unspecified).AddTicks(186), new TimeSpan(0, 8, 0, 0, 0)),
                            Name = "Mountain Walkers",
                            PhotoFileName = "shutterstock_66842440.jpg",
                            Price = 219.5m,
                            Rating = 4,
                            Stock = 12,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "For your everyday marches in the army.",
                            IntroducedAt = new DateTimeOffset(new DateTime(2022, 2, 12, 0, 59, 50, 358, DateTimeKind.Unspecified).AddTicks(219), new TimeSpan(0, 8, 0, 0, 0)),
                            Name = "Army Slippers",
                            PhotoFileName = "shutterstock_222721876.jpg",
                            Price = 125.9m,
                            Rating = 3,
                            Stock = 56,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "This backpack can survive any tornado.",
                            IntroducedAt = new DateTimeOffset(new DateTime(2022, 2, 12, 0, 59, 50, 358, DateTimeKind.Unspecified).AddTicks(222), new TimeSpan(0, 8, 0, 0, 0)),
                            Name = "Backpack Deluxe",
                            PhotoFileName = "shutterstock_6170527.jpg",
                            Price = 199.99m,
                            Rating = 5,
                            Stock = 66,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Anything you need to climb the mount Everest.",
                            IntroducedAt = new DateTimeOffset(new DateTime(2022, 2, 12, 0, 59, 50, 358, DateTimeKind.Unspecified).AddTicks(224), new TimeSpan(0, 8, 0, 0, 0)),
                            Name = "Climbing Kit",
                            PhotoFileName = "shutterstock_48040747.jpg",
                            Price = 299.5m,
                            Rating = 5,
                            Stock = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Simply the fastest kayak on earth and beyond for 2 persons.",
                            IntroducedAt = new DateTimeOffset(new DateTime(2022, 2, 12, 0, 59, 50, 358, DateTimeKind.Unspecified).AddTicks(227), new TimeSpan(0, 8, 0, 0, 0)),
                            Name = "Blue Racer",
                            PhotoFileName = "shutterstock_441989509.jpg",
                            Price = 350m,
                            Rating = 5,
                            Stock = 8,
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Description = "One person kayak with hyper boost button.",
                            IntroducedAt = new DateTimeOffset(new DateTime(2022, 2, 12, 0, 59, 50, 358, DateTimeKind.Unspecified).AddTicks(229), new TimeSpan(0, 8, 0, 0, 0)),
                            Name = "Orange Demon",
                            PhotoFileName = "shutterstock_495259978.jpg",
                            Price = 450m,
                            Rating = 2,
                            Stock = 1,
                            Type = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
